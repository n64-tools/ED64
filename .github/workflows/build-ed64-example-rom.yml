name: Build ED64 Example ROM
 
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        releasetype: [ 'debug', 'release' ]
    steps:
      - uses: actions/checkout@v2
        name: Checkout Code
        with:
          path: xio-sample
      - name: Checkout libdragon repo
        uses: actions/checkout@v2
        with:
          repository: dragonminded/libdragon
          path: libdragon
          ref: '89d17be8563a44a9b95873d436832a1222757cdc'

      - name: patch libdragon make (workaround ignore warnings as errors)
        working-directory: ${{ github.workspace }}/libdragon
        run: |
          sed -z -i.bak 's/ -Wall -Werror / /' ./Makefile

      - name: Buid libdragon
        working-directory: ${{ github.workspace }}/libdragon
        run: >-
          docker run
          --mount type=bind,source=$(pwd),target=/${{ github.workspace }}
          --workdir=/libdragon
          ghcr.io/dragonminded/libdragon:latest
          make libdragon &&
          make tools

      #     sudo npm install -g libdragon
      #     libdragon init
      #     #libdragon exec bash -c 'export N64_CFLAGS="-DNDEBUG"'
      #     #libdragon exec bash -c N64_CFLAGS="-DNDEBUG"
      #     #N64_CFLAGS="-DNDEBUG" && libdragon install
      #     sed -z -i.bak 's/CFLAGS+=$(N64_CFLAGS) /CFLAGS+=$(N64_CFLAGS) -DNDEBUG /' ./libdragon/Makefile
      #     sed -z -i.bak 's/#define assertf(expr, msg, ...)    ({ })/#define assertf(expr, msg, ...)    ({ (void)(expr); })/' ./libdragon/include/debug.h
      #     sed -z -i.bak '1s/^/#undef NDEBUG\n/' ./libdragon/src/debug.c
      #     sed -z -i.bak 's/bool direction = (out<=in);/bool direction = (out<=in); (void)direction;/' ./libdragon/src/audio/libxm/context.c
      #     sed -z -i.bak 's/assert(sz == dec_size);/assert(sz == dec_size); (void)sz;/' ./libdragon/src/audio/libxm/play.c
      #     libdragon install
      #     libdragon start

      - name: Setup Build environment
        working-directory: ${{ github.workspace }}/xio-sample
        run: |
          cd /ED64-XIO/
          mkdir bin && mkdir bin/release && mkdir bin/debug && mkdir obj

      - name: Build ROM
        working-directory: xio-sample
        run: >-
          docker run
          --mount type=bind,source=$(pwd),target=/${{ github.workspace }}
          --workdir=/ED64-XIO
          ghcr.io/dragonminded/libdragon:latest
          make ${{ matrix.releasetype }}
        #run: cd /ED64-XIO/ && libdragon make ${{ matrix.releasetype }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ED64-XIO-SAMPLE_N64_ROM-${{ matrix.releasetype }}
          path: ${{ github.workspace }}/**/ED64-XIO/bin/${{ matrix.releasetype }}/ED64-XIO-SAMPLE.v64
